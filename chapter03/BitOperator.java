//位运算

public class BitOperator {

	//编写一个main方法
	public static void main(String[] args) {

		//推导过程
		//1.得到2的补码 => 2的原码 00000000 00000000 00000000 00000010
		//	2的补码 00000000 00000000 00000000 00000010（三码合一）
		//2.得到3的补码=3的原码00000000 00000000 00000000 00000011
		//3.按位与&
		//	00000000 00000000 00000000 00000010
		//	00000000 00000000 00000000 00000011
		//	00000000 00000000 00000000 00000010 & 运算后的补码
		//	0（正数）0000000 00000000 00000000 00000010 运算后的原码
		//	结果是2
		//System.out.println(2&3);//2

		//推导过程
		//1.得到-2的原码 1(负数)0000000 00000000 00000000 00000010
		//	2的反码 11111111 11111111 11111111 11111101
		//2.-2的补码=-2的反码 + 1
		//	11111111 11111111 11111111 11111110
		//3.~-2的操作
		//	00000000 00000000 00000000 00000001  ~运算后的补码
		//	0（正数）0000000 00000000 00000000 00000001 运算后的原码
		//	结果是1
		System.out.println("hello?");//1
		System.out.println(~(-2));//1
		System.out.println(2&3);//1

		//推导过程
		//1.得到2的补码 00000000 00000000 00000000 00000010（三码合一）
		//3.~-2的操作
		//	11111111 11111111 11111111 11111101 ~运算后的补码
		//	11111111 11111111 11111111 11111100 ~运算后的反码
		//	10000000 00000000 00000000 00000011	~运算后的原码
		//	结果是-3
		System.out.println(~2);//-3
	}
}
